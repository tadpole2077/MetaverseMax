============================================================================
Service call - limiter/Delay intervals - default 100ms
============================================================================

1)  plotDB.AddOrUpdatePlot() - 100ms(custom)
On each Plot MCP WS request, applies a XXX delay (typically 100ms) after WS complete.   Delay internal set from task parameter.
FN: SyncPlotData()

2) CitizenManage.CheckSalePrice()  - 100ms(Fixed)
Called on any CitizenManage.UpdateCitizen(invoke from CitizenManage.GetCitizenMCP())
Triggered if a Cit has a price for-sale "change" since the last update.
Expectation: limited New/Expired/Completed Citizen Sales per day (<100 per sync)



============================================================================
Active User - limiter/Delay interval
============================================================================
1) Additional wait interval of 2 seconds (Fixed/hard coded) invoked
On: Owner - Pet - Offer Loop instance.
Fn: SyncPlotData()



============================================================================
Issue: DB context getting dropped during long running Data-Sync job
============================================================================
Articles that support short running dbcontext obj
1) https://stackoverflow.com/questions/40113035/life-time-of-dbcontext-in-a-long-running-process

Dispose of dbcontext
1) https://stackoverflow.com/questions/15666824/entity-framework-and-calling-context-dispose



===========================================================================
Performance Enhancements (Nightly Sync):   [ as of 2023/08/13 ]
===========================================================================
1) Get all BUILDABLE plots from local db

2) Check each District (regions/list WS) 
	- if District [claimed plot] count has not changed since last run then skip check on all unclimed plots for this district
	- Remove ALL unclaimed plots from FULL process List (still need partial process due to sale/price_change)
	Outcome: 40 to 50% of all plots are unclaimed per district, many districts do not have day to day sales. Major perf improvement.
	Enhancement Dec-2022

3) Check each recorded player account (SINGLE call to user/assets/lands WS)
	- if they have >1 empty plot THEN PROCESS - get full plot list for this player matic_key.
	- remove all player empty plots from Sync list :  these plots details have not changed and still owned by player.
	Enhancment June-2022

4) Filter out all plots from MEGA and HUGE buildings, leaving only 1 master plot to process during nightly sync.
	- Results in ~15% reduction in total plots to sync in Tron & Eth world (as of 1-2023)
	- all related MEGA & HUGE plots are updated to match the master plot sync data (while retaining plot unique data such as abundance, resources, etc)

5) Only process OPENED DISTRICTS plots


6) (ENHANCEMENT 2023/01 - 02)
   Use Partial update process for the following filtered Plots/buildings:
		NOT sold or transferred since last sync.
		NO IP change due to impact of an active/deactivated POI or monument SINCE last data sync.
		NO nearby building built that impacts its IP
		HAS same IP bonus as last sync.


7) Corner Case:  On demolish of L6 or L7 
	Need to run full check all prior related plots used by L6 and L7
	Issue is each prior plots will be reassigned new token_id on demolish, and may build new buildings on each.
	Identify demolish (Level less then current, or building type different)

===========================================================================
Nightly Sync - Major Upgrade 2023/01 : Performance Enh
===========================================================================
Using: [user/assets/lands] WS to update Plots && [Land/Get] to update owner account details(avator_id & owner_name)

Issue 1) Owner Account change tracking - cant identify change from [User/Asset/Lands] WS, must use 
	* [Owner Account] is linked to 1x Avatar, and 1x Avatar name [used by owner account]  
		[Land/Get] always returns latest avator & name used by account.
	* Enhancement:
		* Retreive at least 1 plot (using WS Land/Get) per night / per account. NEEDED to confirm/update current account name and avator.
		* If name/avator has changed compared to saved then update all plots for that account with same avatar/name pair.
		* Note:  MCP only updates (full) plot with updated avatar/name after an event/action occurs on that plot
		* [Future possible enhancement] Remove avator_id and nickname from plot - use table Owner and OwnerName to store/get single source of these properties.
	* Tech Solution:
		Within  plotManage.CheckEmptyPlot(), leave at least one plot for owner, if owner account contains only empty unbuild plots - leave 1 plot in process list.
		Pass ownerChangeList to  plotManage.AddOrUpdatePlot()
		Check List for owner, if not found ADD owner + name + avatar_id used for plot update


Issue 2) Empty cliamed plot - update REQUIRED.
	* Using [fast] partial updates (user/assets/land) -  plot for sale and price needs to be checked nightly.


Issue 3)
	POI/Monument - need to identify if when state changes (active <> inactive), and Full process any nearby building on state change.
	Needed: Nightly record POI/Monument active_until date, identify if this has changed since last sync, if a state change has occured since last sync.
	key Logic (can narrow futher if additional perf improvement needed): 
		Run full sync on all buildings in district if ANY district POI state change found.
		Run full sync on all owner plots if ANY owned monument state change found.

	How to identify if Plot was previously using active POI, and its now inactive without getting the full plot details.
	Q) Am I able identify if any monument on an account has changed state since last sync?
		Need to know what the prior sync monument actual state active/inactive at that specific time.
		if it was recorded as active, then can eval current state (active/inactive), and id a change in state.
		Key Logic: plot.last_updated < plot.poi_active_until then POI/Monument was active on last data sync instance
		Condition: [POI / Monument plot] can only have plot.last_updated changed by nightly sync.



===========================================================================
Nightly Sync - Setup/Install Instructions :
===========================================================================
1) Directory Structure:
	[Drive]:\MetaverseMax\[World]\Job\[SyncJob Install fileset]
	C:\7_MetaverseMax\BNB\JOB\..

2) Settings:
	File: SyncJob.dll.config
	2x AppSettings:
    <add key="requestURL" value="https://metaversemax.com/api/api/bnb/plot/updateplotsync" />
    <add key="urlParameters" value="?secure_token=JUST_SIMPLE_CHECK123&amp;interval=100" />

	Change requestURL to match target world.


3) Scheduled Job Creation:
	Create Task
	General Tab:
		Name >  MetaverseMax BNB - Sync MCP
		location > \MetaverseMax   (folder of all related jobs for metaverseMax)
		Description > Nightly Sync
		Security options:
			user account: TADPOLEHOST1\Administrator
			(option selected) : "Run whether user is logged on or not" + No_tick "Do not store password"
		Configure For > Windows Server 2019

	Triggers Tab:
		(New Trigger)
		Begin the task > "On a schedule"
		Daily (selected radio)
		Start: select following morning + scheduled time (eg 5:00)
		Recur every: 1 days

	Action Tab:
		(new)
		Action > "Start a program"
		Programe/Script: C:\7_MetaverseMax\BNB\Job\SyncJob.exe
		No arguments or Start In parameters.

	Notes:
		On Save of new scheduled job - assign the Administrator password for use by the job.


		
===========================================================================
Missions (Nightly Sync):   [ as of 2023/10/03 ]
===========================================================================

New Mission (per building) are found during nightly sync [Plot.RemoveAccountPlot()  >> UpdatePlotPartial(lands[landIndex], false, refreshMission) >> refreshMssion = true]
	* New missions are not identified on manual load of an accounts data - due to processing time requird at this time :  100 missions = 4 seconds - each mission refresh is a separate MCP call (This may improve as MCP release new WS)
New Customs:
	* New CUSTOM buildings are handled by nightly sync, and may *in a few cases* be identified by manual account load (such as new purchased plot converted to custom, influance change, transfer owner)

Refresh Mission data:
	* Sync job >> hourly scheduled job : SyncWorld.SyncMission_PerWorld()
		* This job only updateds EXISTING missions - does not identify any new mission generated during the day - as this would required processing All accounts.    This may be improved as new WS are released by MCP
		* This job also updates CUSTOM buildings - unit details, which units are available forSale and prices.
	* Plot Full Refresh >> will also update any mission related that building
		*  This may get triggered by a account load - but its a backend async task that does not delay the portfolio feature - account loading process
